pipeline {
  agent {
    node {
      label 'nodejs'
    }
  }
  stages {
    stage('build and test') {
      steps {
        container('nodejs') {
          sh 'npm install'
          sh 'npm test' 
        }
      }
    }
    stage('Sonar Analysis') {
            steps {
                script {
                      container('nodejs') {
                        withSonarQubeEnv("ks-sonar") {
                            sh """${tool("sonar")}/bin/sonar-scanner \
                            -Dsonar.projectKey=react-app \
                            -Dsonar.sources=. \
                            -Dsonar.projectName=react-app \
                            -Dsonar.projectVersion=1.0 """
                        }
                       }
                        def qualitygate = waitForQualityGate()
                       /* if (qualitygate.status != "OK") {
                            error "Pipeline aborted due to quality gate coverage failure: ${qualitygate.status}"
                        }*/
                }
            }                                    
        }
  stage('build and tag docker image') {
      steps {
        container('nodejs') {
          sh '''docker build -t vani0123/docker-nodejs-demo .
docker tag vani0123/docker-nodejs-demo vani0123/docker-nodejs-demo:1.0.0-SNAPSHOT'''
        }
      }
    }
  stage('docker push') {
      steps {
        script{
          container('nodejs') {
               docker.withRegistry('https://ghcr.io', 'vani0123') {
               def dockerImage = docker.image("vani0123/docker-nodejs-demo:1.0.0-SNAPSHOT")
                           dockerImage.push()
               }
          }
        }
      }
    }
  }
  post {
       always {
           cleanWs()
       }
  }
}
